#include "aes.h"

int main(int argc, char *argv[])
{
    uint8_t *key128 = (uint8_t *) malloc(16*sizeof(uint8_t));
    key128[0] = 0x2b;
    key128[1] = 0x7e;
    key128[2] = 0x15;
    key128[3] = 0x16;
    key128[4] = 0x28;
    key128[5] = 0xae;
    key128[6] = 0xd2;
    key128[7] = 0xa6;
    key128[8] = 0xab;
    key128[9] = 0xf7;
    key128[10] = 0x15;
    key128[11] = 0x88;
    key128[12] = 0x09;
    key128[13] = 0xcf;
    key128[14] = 0x4f;
    key128[15] = 0x3c;
    AES *aes128 = new AES(4,4,key128);

    uint8_t *key192 = (uint8_t *) malloc(24*sizeof(uint8_t));
    key192[0] = 0x8e;
    key192[1] = 0x73;
    key192[2] = 0xb0;
    key192[3] = 0xf7;
    key192[4] = 0xda;
    key192[5] = 0x0e;
    key192[6] = 0x64;
    key192[7] = 0x52;
    key192[8] = 0xc8;
    key192[9] = 0x10;
    key192[10] = 0xf3;
    key192[11] = 0x2b;
    key192[12] = 0x80;
    key192[13] = 0x90;
    key192[14] = 0x79;
    key192[15] = 0xe5;
    key192[16] = 0x62;
    key192[17] = 0xf8;
    key192[18] = 0xea;
    key192[19] = 0xd2;
    key192[20] = 0x52;
    key192[21] = 0x2c;
    key192[22] = 0x6b;
    key192[23] = 0x7b;
    AES *aes192 = new AES(4,6,key192);

    uint8_t *key256 = (uint8_t *) malloc(32*sizeof(uint8_t));
    key256[0] = 0x60;
    key256[1] = 0x3d;
    key256[2] = 0xeb;
    key256[3] = 0x10;
    key256[4] = 0x15;
    key256[5] = 0xca;
    key256[6] = 0x71;
    key256[7] = 0xbe;
    key256[8] = 0x2b;
    key256[9] = 0x73;
    key256[10] = 0xae;
    key256[11] = 0xf0;
    key256[12] = 0x85;
    key256[13] = 0x7d;
    key256[14] = 0x77;
    key256[15] = 0x81;
    key256[16] = 0x1f;
    key256[17] = 0x35;
    key256[18] = 0x2c;
    key256[19] = 0x07;
    key256[20] = 0x3b;
    key256[21] = 0x61;
    key256[22] = 0x08;
    key256[23] = 0xd7;
    key256[24] = 0x2d;
    key256[25] = 0x98;
    key256[26] = 0x10;
    key256[27] = 0xa3;
    key256[28] = 0x09;
    key256[29] = 0x14;
    key256[30] = 0xdf;
    key256[31] = 0xf4;
    AES *aes256 = new AES(4,8,key256);

    uint8_t *key128_test = (uint8_t *) malloc(16*sizeof(uint8_t));
    uint8_t *in128_test = (uint8_t *) malloc(16*sizeof(uint8_t));
    uint8_t *out128_test = (uint8_t *) malloc(16*sizeof(uint8_t));
    uint8_t *orig128_test = (uint8_t *) malloc(16*sizeof(uint8_t));
    key128_test[0] = 0x2b;
    key128_test[1] = 0x7e;
    key128_test[2] = 0x15;
    key128_test[3] = 0x16;
    key128_test[4] = 0x28;
    key128_test[5] = 0xae;
    key128_test[6] = 0xd2;
    key128_test[7] = 0xa6;
    key128_test[8] = 0xab;
    key128_test[9] = 0xf7;
    key128_test[10] = 0x15;
    key128_test[11] = 0x88;
    key128_test[12] = 0x09;
    key128_test[13] = 0xcf;
    key128_test[14] = 0x4f;
    key128_test[15] = 0x3c;
    in128_test[0] = 0x32;
    in128_test[1] = 0x43;
    in128_test[2] = 0xf6;
    in128_test[3] = 0xa8;
    in128_test[4] = 0x88;
    in128_test[5] = 0x5a;
    in128_test[6] = 0x30;
    in128_test[7] = 0x8d;
    in128_test[8] = 0x31;
    in128_test[9] = 0x31;
    in128_test[10] = 0x98;
    in128_test[11] = 0xa2;
    in128_test[12] = 0xe0;
    in128_test[13] = 0x37;
    in128_test[14] = 0x07;
    in128_test[15] = 0x34;
    AES *aes128_test = new AES(4,4,key128_test);
    aes128_test->Cipher(in128_test,out128_test);
    aes128_test->InvCipher(out128_test,orig128_test);


    return 0;

}
